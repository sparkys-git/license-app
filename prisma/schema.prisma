generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model License {
  id            String       @id @default(cuid())
  code          String       @unique
  type          String
  expiryDate    DateTime
  email         String
  ipAddress     String?
  source        String
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  isActive      Boolean      @default(true)
  enabled       Boolean      @default(true)
  applicationId String
  application   Application? @relation(fields: [applicationId], references: [id], onDelete: Restrict)

  @@map("licenses")
}

model ApiKey {
  id        String   @id @default(cuid())
  key       String   @unique
  name      String
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("api_keys")
}

model User {
  id        String   @id @default(cuid())
  username  String   @unique
  password  String
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Application {
  id            String    @id @default(cuid())
  name          String    @unique
  description   String?
  trialPeriod   Int       @default(30)  // days
  renewalPeriod Int       @default(365) // days
  isActive      Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  licenses      License[]
  
  @@map("applications")
}

model ValidationLog {
  id                   String   @id @default(cuid())
  code                 String   // License code that was validated
  email                String   // Email provided in validation request
  ipAddress            String   // Client IP address
  validationCode       Int      // Numeric validation result code
  validationMessage    String   // Terse explanation of result
  timestamp            DateTime @default(now())
  
  @@map("validation_logs")
}
